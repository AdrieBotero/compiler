1		program test (input, output);

2		  var a : integer;

3		  var b : real;

4		  var c : array [1..2] of integer;

5		  var d : real;

6		  function fun1(x:integer; y:real; 

7		                  z:array [1..2] of integer; 

8		                  q: real) : integer;

9		    var d: integer;

10		

11		    begin

12		      a:= 2;

13		      z[a] := 4;

14		      c[2] := 3;

15		      fun1 := c[1]

16		     end;

17		

18		   function fun2(x: integer; y: integer) : real;

19		     var e: real;

20		

21		     function fun3(n: integer; z: real) : integer;

22		       var e: integer;

23		       begin

24		         a:= e;

25		         e:= c[e];

26		         fun3 := 3

27		       end;

28		

29		     begin

30		       a:= fun1(x, e, c, b);

31		       x:= fun3(c[1], e);

32		       e := e + 4.44;

33		       a:= (a mod y) div x;

34		       while ((a >= 4) and ((b <= e) 

35		                       or (not (a = c[a])))) do

36		         begin

37		           a:= c[a] + 1

38		         end;

39		       fun2 := 2.5 

40		     end;

41		

42		begin

43		  b:= fun2(c[4], c[5,5]);

Syntax Error: in line 43 Expecting (']',)received ,
Syntax Error: in line 43 Expecting (')', ',')received ]
ERROR SIZE:  in line 43for fun2
ERROR type:  in line 43for fun2
ERROR type:  in line 43for fun2
44		  b:= fun2(c[4], c[5],5);

ERROR SIZE:  in line 44for fun2
ERROR type:  in line 44for fun2
ERROR type:  in line 44for fun2
45		  b:= fun2(c[4], c);

ERROR type:  in line 45for fun2
46		  b:= fun2(c[4]);

ERROR SIZE:  in line 46for fun2
47		  b:= fun2();

Syntax Error: in line 47 Expecting ('(', '+', '-', 'id', 'not', 'num')received )
48		  b:= fun2;

49		  b:= fun3(c[4], c[5]);

Scope Error: Out of scope Line number 49 for fun3
ERROR SIZE:  in line 49for test
Assignop Error in line 49: You are trying to assign a real with an 
50		  b:= fun4(c[4],2);

Scope Error: Out of scope Line number 50 for fun4
ERROR SIZE:  in line 50for test
Assignop Error in line 50: You are trying to assign a real with an 
51		  if (a < 2) then a:= 1 else a := a + 2;

52		  if (b > 4.2) then a := c[a]

53		end.

